version: "3.7"

services:
  proxy:
    # https://hub.docker.com/_/nginx
    image: nginx:latest
    env_file: mystbin/nginx/.env
    build: mystbin/nginx
    ports:
      - 5555:443/tcp
      - 5556:80/tcp
    volumes:
      # - ./mystbin/nginx/sites-enabled/:/etc/nginx/sites-enabled/:ro
      - ./mystbin/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./mystbin/nginx/ssl/keys/:/etc/ssl/keys/:rw
      - ./mystbin/nginx/ssl/certs/:/etc/ssl/certs/:rw
    container_name: "staging-reverse-proxy"
    networks:
      main:
        ipv4_address: 172.25.0.10

  api:
    image: python:3.9.1-buster
    build: mystbin/rest
    volumes:
      - ./mystbin/database/schema.sql:/etc/schema.sql:ro
    container_name: "staging-api"
    networks:
      main:
        ipv4_address: 172.25.0.11
    depends_on:
      - postgres

  postgres:
    image: postgres:13-alpine
    ports:
      - 59123:5432
    container_name: "staging-postgresql"
    volumes:
      - postgresdata:/var/lib/postgresql/data/pgdata
    environment:
      POSTGRES_DB: mystbin
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_HOST_AUTH_METHOD: "md5"
      PGDATA: /var/lib/postgresql/data/pgdata
    networks:
      main:
        ipv4_address: 172.25.0.12

volumes:
  postgresdata:


networks:
  main:
    ipam:
      driver: default
      config:
        - subnet: 172.25.0.0/16