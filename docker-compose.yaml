version: "3.8"

services:
  proxy:
    image: caddy:latest
    env_file: mystbin/caddy/.env
    ports:
      - 127.0.0.1:5555:443/tcp
      - 127.0.0.1:5556:80/tcp
    volumes:
      - caddy_config:/config
      - caddy_data:/data
      - ./mystbin/caddy/Caddyfile:/etc/caddy/Caddyfile
    container_name: "staging-reverse-proxy"
    networks:
      main:
        ipv4_address: 172.25.0.10
    depends_on:
      - api

  api:
    image: python:3.9.1-buster
    build: mystbin/rest
    ports:
      - 5557:9000/tcp
    volumes:
      - ./mystbin/database/schema.sql:/etc/schema.sql:ro
      - ./mystbin/rest/config.toml:/usr/src/app/config.toml:ro
    container_name: "staging-api"
    networks:
      main:
        ipv4_address: 172.25.0.11
    depends_on:
      - postgres

  postgres:
    image: postgres:13-alpine
    ports:
      - 127.0.0.1:5558:5432
    container_name: "staging-postgresql"
    volumes:
      - postgresdata:/var/lib/postgresql/data/pgdata
    environment:
      POSTGRES_DB: mystbin
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_HOST_AUTH_METHOD: "md5"
      PGDATA: /var/lib/postgresql/data/pgdata
    networks:
      main:
        ipv4_address: 172.25.0.12

  frontend:
    image: node:latest
    volumes:
      - node_modules:/app/node_modules
    ports:
      - 127.0.0.1:5559:3000
    container_name: "staging-frontend"
    build: ./mystbin/frontend
    depends_on:
      - api
    networks:
      main:
        ipv4_address: 172.25.0.13

volumes:
  postgresdata:
  caddy_data:
  caddy_config:
  node_modules:


networks:
  main:
    ipam:
      driver: default
      config:
        - subnet: 172.25.0.0/16